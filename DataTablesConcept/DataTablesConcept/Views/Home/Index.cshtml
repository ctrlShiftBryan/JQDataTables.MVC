@{
    ViewBag.Title = "Home Page";
}
@using DataTablesHelper
@model JQDataTablesWrapper<DataTablesConcept.Product>
     <link href="../../Content/DataTables-1.9.1/media/css/jquery.dataTables.css" rel="stylesheet"
             type="text/css" />  
             
<link href="../../Content/jquery-ui-1.8.21.custom.css" rel="stylesheet" type="text/css" />
             
<script src="../../Scripts/jquery-ui-1.8.11.js" type="text/javascript"></script>
<script src="../../Scripts/DataTables-1.9.1/media/js/jquery.dataTables.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.dataTables.rowReordering.js" type="text/javascript"></script>
<style type="text/css">
    .filterMatches {
        color: white;
        background: #828bff;
        
    }
</style>

@*<link href="http://datatables.net/media/css/site_jui.ccss" rel="stylesheet" type="text/css" />
<link href="http://datatables.net/release-datatables/media/css/demo_table_jui.css" rel="stylesheet" type="text/css" />
<link href="http://datatables.net/media/css/jui_themes/ui-darkness/jquery-ui-1.7.2.custom.css" rel="stylesheet" type="text/css" />
*@
<style type="text/css" media="screen">

			table td { table-layout:fixed; 
			            overflow:hidden;  white-space:nowrap;  }
		</style>


<script type="text/javascript">
    var dataTable;
    var canSort;
    var test;
    var asInitVals = new Array();
    var aoColumns = @Html.Raw(Model.GetInitList.ToJson());
    $(function () {

       // aoColumns[0].bVisible = false;
        initDT();
        function initDT() {
           
        dataTable = $('#example').dataTable({
            "sPaginationType": "full_numbers",
        "bJQueryUI": true,
            "bDestroy": true,
            "bProcessing": false,
            "bServerSide": true,
            "sServerMethod": "POST",

            "sAjaxSource": "../Home/Data",
            
            "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {
                

                 var id = aData["pid"];
               
                canSort = id !== undefined;
                if(canSort)
                $(nRow).attr("id",id);


                var settings = this.fnSettings();
                var str = settings.oPreviousSearch.sSearch;
                var regex = new RegExp(str + "(?!([^<]+)?>)", 'i');
                //for (i in aData) {
                //    if (!!aData[i]) {  // not sure what this is for.. 
                //        aData[i] = aData[i].replace( regex, function(matched) { return "<span class='filterMatches'>"+matched+"</span>";} );
                //    }
                  //              }

                $('td', nRow).each(
                    function(i, v) {


                        var html = $(v).html();
                        
                        html = html.replace( regex, function(matched) { return "<span class='filterMatches'>"+matched+"</span>";} );

                        $(v).html(html);

                    }
                );

                return nRow;
            },


            "aoColumns": aoColumns

        }); 
        }

        $('#order').click( function () {
            dataTable.rowReordering({ 
                                     sURL:"../Home/Sort",
                                     sRequestType: "POST"
                                   });
                                   
            $(this).hide();
            $('#order-done').show();
            

            $("tfoot input").each( function (i,v) {
                v.className = "search_init";
                v.value = asInitVals[$("tfoot input").index(v)];
               
            } );
            $('#example_filter input, .search_init').attr('readonly', 'readonly');
            
             dataTable.fnFilterClear();
        });
        
         $('#order-done').click( function () {
              $('#example_filter input, .search_init').removeAttr('readonly');
            $("tbody", dataTable).sortable("destroy");
            initDT();
            $(this).hide();
            $('#order').show();
             

        });
        
         $("tfoot input").keyup( function () {
        /* Filter on the column (the index) of this element */
            if(!($(this).is('[readonly]')))
        
            dataTable.fnFilter( this.value, $("tfoot input").index(this) );
        } );
     
     
     
    /*
     * Support functions to provide a little bit of 'user friendlyness' to the textboxes in 
     * the footer
     */
    $("tfoot input").each( function (i) {
        asInitVals[i] = this.value;
    } );
     
    $("tfoot input").focus( function () {
       if(!($(this).is('[readonly]')))
         {
            if (this.className == "search_init") {
                this.className = "";
                this.value = "";
            } 
        }
        else 
        {
                $(this).blur();
        }
    } );
     
    $("tfoot input").blur( function (i) {
        if(!($(this).is('[readonly]')))
        if ( this.value == "" )
        {
            this.className = "search_init";
            this.value = asInitVals[$("tfoot input").index(this)];
        }
    } );


    });

   
</script>

@*<script src="../../Scripts/HomeIndex.js" type="text/javascript"></script>
*@

<div>
    <button id="order" type="button">Order</button>
    <button id="order-done" type="button" style="display: none;">Done</button>
</div>
<div>
    <table cellpadding="0" cellspacing="0" border="0" class="display" id="example" >
        <thead>
            <tr>
                @foreach(var p in Model.ColumnInfos)
                {
                    <th>@p.FormattedName</th>          
                }
            </tr>
        </thead>
        <tbody>
		
        </tbody>
        <tfoot>
            
           
                <tr>
                @foreach(var p in Model.ColumnInfos)
                {
                    <th>
                        <div>
                            <input type="text" 
                                   name="@p.ShortName" 
                                   value="Search" 
                                   class="search_init" />
                        </div>
                       
                    </th>          
                }
            </tr>
                 <tr>
                @foreach(var p in Model.ColumnInfos)
                {
                    <th>
                        
                        @p.FormattedName
                    </th>          
                }
            </tr>
        </tfoot>
    </table>
</div>

